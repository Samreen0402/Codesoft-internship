#include <iostream>
#include <vector>
class TicTacToe {
private:
    std::vector<std::vector<char>> board;
    char currentMarker;
    int currentPlayer;

    void drawBoard() {
        std::cout << "Current board state:\n";
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                std::cout << ' ' << board[i][j] << ' ';
                if (j < 2) std::cout << "|";
            }
            std::cout << std::endl;
            if (i < 2) std::cout << "---|---|---\n";
        }
    }

    bool placeMarker(int slot) {
        int row = (slot - 1) / 3;
        int col = (slot - 1) % 3;
        
        if (board[row][col] != 'X' && board[row][col] != 'O') {
            board[row][col] = currentMarker;
            return true;
        } else {
            return false;
        }
    }

    int checkWinner() {
        for (int i = 0; i < 3; i++) {
            // Check rows and columns
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ') return currentPlayer;
            if (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != ' ') return currentPlayer;
        }
        if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ') return currentPlayer;
        if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' ') return currentPlayer;

        return 0;
    }

    void switchPlayer() {
        currentMarker = (currentMarker == 'X') ? 'O' : 'X';
        currentPlayer = (currentPlayer == 1) ? 2 : 1;
    }

public:
    TicTacToe() : board(3, std::vector<char>(3, ' ')), currentMarker('X'), currentPlayer(1) {
    }

    void play() {
        int moveCount = 0;
        drawBoard();
        while (moveCount < 9) {
            std::cout << "Player " << currentPlayer << "'s turn. Enter your slot (1-9): ";
            int slot;
            std::cin >> slot;

            if (slot < 1 || slot > 9 || !placeMarker(slot)) {
                std::cout << "Invalid slot! Try again.\n";
                continue;
            }

            drawBoard();
            ++moveCount;

            if (int winner = checkWinner()) {
                std::cout << "Player " << winner << " wins!\n";
                return;
            }

            switchPlayer();
        }
        std::cout << "It's a draw!\n";
    }
};

int main() {
    char playAgain = 'y';
    do {
        TicTacToe game;
        game.play();
        std::cout << "Do you want to play again? (y/n): ";
        std::cin >> playAgain;
    } while (playAgain == 'y');

    return 0;
}
